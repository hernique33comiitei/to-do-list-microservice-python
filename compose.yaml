services:
  db:
    image: mysql:8.0.36
    env_file:
      - .env
    networks:
      - internalNetwork
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_HOST: ${MYSQL_HOST}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3308:3306"

  redis:
    image: redis:7.4.0
    env_file:
      - .env
    networks:
      - internalNetwork
    volumes:
      - redis_data:/data
    ports:
      - "6370:6379"

  pytest:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["/usr/local/bin/wait-for-it.sh"]
    networks:
      - internalNetwork
    depends_on:
      - db
      - redis

  post_task_module:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn src.createTasksModule.main:app --host 0.0.0.0 --port $PORT_TASKPOSTMODULE;
    ports:
      - "$PORT_TASKPOSTMODULE:$PORT_TASKPOSTMODULE"
    networks:
      - internalNetwork
    depends_on:
      - db

  get_task_module:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn src.getTasksModule.main:app --host 0.0.0.0 --port $PORT_TASKGETMODULE;
    ports:
      - "$PORT_TASKGETMODULE:$PORT_TASKGETMODULE"
    networks:
      - internalNetwork
    depends_on:
      - db
      - redis

volumes:
  mysql_data:
  redis_data:

networks:
  internalNetwork:
    driver: bridge
